name: Test Composite Actions

on:
  workflow_dispatch:
    inputs:
      language:
        description: 'Programming language'
        required: true
        default: 'csharp'
        type: string
      app-name:
        description: 'Application name'
        default: 'netwebapi'
        required: true
        type: string
      dotnet-version:
        description: 'Dotnet version'
        required: false
        type: string
        default: '9.0.300'
      dotnet-tools-restore:
        description: 'Restore tools. If unchecked, install tools globally.'
        required: false
        type: boolean
        default: true
      dotnet-linter-csharpier:
        description: 'Lint with csharpier'
        required: false
        type: boolean
        default: true
      dotnet-linter-roslynator:
        description: 'Lint with roslynator'
        required: false
        type: boolean
        default: false
      registry:
        description: 'Container registry'
        required: false
        type: string
        default: 'ghcr.io'
      chart:
        description: 'Chart path'
        required: false
        type: string
        default: 'deploy/helm/netwebapi'
      helm-version:
        description: 'Helm version'
        required: false
        type: string
        default: 'helm3'
      target:
        description: "Deployment platform"
        required: false
        default: 'local-k8s'
        type: choice 
        options:
          - 'local-k8s'
          - 'azure-webapp-svc'
jobs:
  test:
    uses: dgeorgievski/my-github-actions/.github/workflows/dev-csharp.yaml@composites
    with:
      app-name: ${{ inputs.app-name }}
      language: ${{ inputs.language }}
      dotnet-version: ${{ inputs.dotnet-version }}
      dotnet-tools-restore: ${{ inputs.dotnet-tools-restore }}
      dotnet-linter-csharpier: true
      dotnet-linter-roslynator: false
      azure_webapp_package_path: 'src/NetWebApi.API'
      security-trivy: true
      security-snyk: false
      registry: ${{ inputs.registry }}
      chart: ${{ inputs.chart }}
      helm-version: ${{ inputs.helm-version }}
      target: ${{ inputs.target }}
    secrets: inherit
